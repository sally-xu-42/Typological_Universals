#!/bin/bash

#SBATCH -n 1
#SBATCH --cpus-per-task=1
#SBATCH --mem-per-cpu=16384
#SBATCH --gpus=1
#SBATCH --time=2:00:00
#SBATCH --open-mode=truncate
#SBATCH --mail-type=FAIL


#! Model directory (i.e. where the model checkpoints are saved):
modeldir="/cluster/work/cotterell/txu/Typological_Universal/checkpoints"

export WANDB_PROJECT="evaluation"
export WANDB__SERVICE_WAIT=300

#! Run options for the application:
case $TASK in

  blimp)
    workdir="/cluster/work/cotterell/txu/evaluation-pipeline"

    if [ "$MODEL_TYPE" = decoder ]
    then
      echo -e "\nFixing tokenizer config"
      python3 ./src/learn/fix_tokenizer.py --path $workdir/checkpoints/${MODEL}
    fi

    prefix="python3"
    application="babylm_eval.py"
    options="$modeldir/${MODEL} ${MODEL_TYPE}"
    ;;

  jblimp)
    workdir="/cluster/work/cotterell/txu/evaluation-pipeline"
    prefix="python3"
    application="babylm_eval.py"
    options="$modeldir/${MODEL} ${MODEL_TYPE}"
    ;;

  blimp_checkpoints)
    workdir="/cluster/work/cotterell/txu/Typological_Universal"

    for checkpoint in $workdir/checkpoints/${MODEL}/checkpoint-*; do
      if [ "$MODEL_TYPE" = decoder ]
      then
        echo -e "\nFixing tokenizer config for $checkpoint"
        python3 ./src/learn/fix_tokenizer.py --path $checkpoint
      fi

      CMD="${workdir}/scripts/evaluate.sh -t blimp -m ${checkpoint#*checkpoints/} -e ${MODEL_TYPE}"
      echo $CMD
      eval $CMD
      sleep 240
    done
    echo -e "\n"

    prefix="echo"
    application=""
    options="Started evaluation for each checkpoint of ${MODEL}"
    ;;

  jblimp_checkpoints)
    workdir="/cluster/work/cotterell/txu/Typological_Universal"

    for checkpoint in $workdir/checkpoints/${MODEL}/checkpoint-*; do
      if [ "$MODEL_TYPE" = decoder ]
      then
        echo -e "\nFixing tokenizer config for $checkpoint"
        python3 ./src/learn/fix_tokenizer.py --path $checkpoint
      fi

      CMD="${workdir}/scripts/evaluate.sh -t jblimp -m ${checkpoint#*checkpoints/} -e ${MODEL_TYPE}"
      echo $CMD
      eval $CMD
      sleep 200
    done
    echo -e "\n"

    prefix="echo"
    application=""
    options="Started evaluation for each checkpoint of ${MODEL}"
    ;;

  *)
    echo -n "unknown model name"
    ;;
esac

module purge
module load eth_proxy stack/2024-06 gcc/12.2.0 python_cuda/3.11.6
source $workdir/venv/bin/activate

echo -e "JobID: $SLURM_JOB_ID\n======"
echo "Time: `date`"
echo "Running on master node: `hostname`"
echo "Current directory: `pwd`"

cd $workdir
echo -e "Changed directory to `pwd`.\n"

CMD="$prefix $workdir/$application $options"
echo -e "\nExecuting command:\n==================\n$CMD\n"
eval $CMD
